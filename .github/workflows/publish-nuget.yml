name: Publish NuGet Packages

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Get modified .csproj files
        id: get-changes
        run: |
          echo "Fetching modified .csproj files..."
          MODIFIED_PROJECTS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.csproj$' || true)
          echo "Modified projects:"
          echo "$MODIFIED_PROJECTS"
          echo "::set-output name=projects::$MODIFIED_PROJECTS"

      - name: Build and publish modified projects
        if: steps.get-changes.outputs.projects != ''
        run: |
          echo "Processing modified .csproj files..."
          for project in ${{ steps.get-changes.outputs.projects }}; do
            echo "Building and packing project: $project"
            dotnet build --configuration Release --no-restore "$project"
            
            PACKAGE_PATH=$(find "$(dirname "$project")/bin/Release" -name '*.nupkg')
            for package in $PACKAGE_PATH; do
              echo "Attempting to publish package: $package"
              dotnet nuget push "$package" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate || {
                echo "Error occurred while publishing $package. Check logs for details."
              }
            done
          done

      - name: No changes detected
        if: steps.get-changes.outputs.projects == ''
        run: echo "No modified .csproj files found in the latest push."
