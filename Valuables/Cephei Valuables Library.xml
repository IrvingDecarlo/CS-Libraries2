<?xml version="1.0"?>
<doc>
    <assembly>
        <name>cva</name>
    </assembly>
    <members>
        <member name="T:Cephei.Valuables.Gauge">
            <summary>
            The Gauge is the object implementation of IGauge, offering its functionalities. It uses an IGauge[double].
            </summary>
        </member>
        <member name="M:Cephei.Valuables.Gauge.#ctor(System.Double,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Instantiates a new Gauge, setting its values.
            </summary>
            <param name="value">Value (or precentage) to set.</param>
            <param name="maxvalue">Max value.</param>
            <param name="pct">Should it set the 'value' param to its value or to its percentage?</param>
            <param name="freeflow">Should it be freeflow?</param>
        </member>
        <member name="P:Cephei.Valuables.Gauge.MaxValue">
            <summary>
            Sets/gets MaxValue, adjusting its current value based on the percentage.
            May throw exception if this gauge is not freeflow and MaxValue is set to the negatives or to 0.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:Cephei.Valuables.Gauge.Percentage">
            <summary>
            Sets/gets the gauge's percentage, adjusting its value based off of its max value. May throw exceptions if this gauge cannot overflow.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:Cephei.Valuables.Gauge.Value">
            <summary>
            The gauge's current value. May throw exceptions if not Freeflow and it is set to be greater than MaxValue or lower than 0.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Cephei.Valuables.Gauge.ToString">
            <summary>
            Returns a string with the gauge's values.
            </summary>
            <returns>A string with the gauge's values.</returns>
        </member>
        <member name="M:Cephei.Valuables.Gauge.SetMaxValue(System.Double)">
            <summary>
            Sets the MaxValue without adjusting current value to maintain the percentage. If Freeflow is false then MaxValue cannot be below 0 nor lower than current value.
            </summary>
            <param name="value">The value to set MaxValue to.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:Cephei.Valuables.Gauge.Freeflow">
            <summary>
            Can this gauge's values flow out of bounds (have percentages that exceed 100%, negative MaxValues, etc).
            Will throw an exception if the gauge has a percentage out of the 0~100% range.
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:Cephei.Valuables.IGauge`1">
            <summary>
            The IGauge interface offers the base for gauges, implementing IValuable alongside MaxValue and percentage.
            </summary>
            <typeparam name="T">Any type, but a numeric type is highly advised.</typeparam>
        </member>
        <member name="P:Cephei.Valuables.IGauge`1.MaxValue">
            <summary>
            This is the gauge's max value.
            </summary>
        </member>
        <member name="P:Cephei.Valuables.IGauge`1.Percentage">
            <summary>
            This is the gauge's percentage fill.
            </summary>
        </member>
        <member name="T:Cephei.Valuables.IReadOnlyValuable`1">
            <summary>
            IReadOnlyValuables are valuable objects with a read-only Value property.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="P:Cephei.Valuables.IReadOnlyValuable`1.Value">
            <summary>
            Gets the object's value.
            </summary>
        </member>
        <member name="T:Cephei.Valuables.IValuable`1">
            <summary>
            IValuable is the base for any object that intends to have a value assigned to it.
            </summary>
            <typeparam name="T">Any object.</typeparam>
        </member>
        <member name="P:Cephei.Valuables.IValuable`1.Value">
            <summary>
            This is the value assigned to this IValuable.
            </summary>
        </member>
        <member name="T:Cephei.Valuables.ValuableExtensions">
            <summary>
            This class contains extension methods related to valuables.
            </summary>
        </member>
        <member name="M:Cephei.Valuables.ValuableExtensions.ToGaugeString``1(Cephei.Valuables.IGauge{``0})">
            <summary>
            Returns a string with the gauge's values.
            </summary>
            <typeparam name="T">Any type.</typeparam>
            <param name="gauge">The gauge.</param>
            <returns>A string with the gauge's values.</returns>
        </member>
        <member name="M:Cephei.Valuables.ValuableExtensions.ToGaugeString``1(Cephei.Valuables.IGauge{``0},System.String,System.String)">
            <summary>
            Returns a string with the gauge's values, using specific formatters.
            </summary>
            <typeparam name="T">Any IFormattable object.</typeparam>
            <param name="gauge">The gauge.</param>
            <param name="pformat">Format for the percentage.</param>
            <param name="nformat">Format for the other values.</param>
            <returns>A formatted string with the gauge's values.</returns>
        </member>
        <member name="M:Cephei.Valuables.ValuableExtensions.ToGaugeString``1(Cephei.Valuables.IGauge{``0},System.String,System.String,System.IFormatProvider)">
            <summary>
            Returns a string with the gauge's values, using specific formatters.
            </summary>
            <typeparam name="T">Any IFormattable object.</typeparam>
            <param name="gauge">The gauge.</param>
            <param name="pformat">Format for the percentage.</param>
            <param name="nformat">Format for the other values.</param>
            <param name="formatter">The format provider.</param>
            <returns>A formatted string with the gauge's values.</returns>
        </member>
    </members>
</doc>
